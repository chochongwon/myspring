<?xml version="1.0" encoding="UTF-8"?>
 <beans xmlns="http://www.springframework.org/schema/beans"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 	 
	 xmlns:aop="http://www.springframework.org/schema/aop"
	 xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:p="http://www.springframework.org/schema/p"
	 xmlns:batch="http://www.springframework.org/schema/batch"
	 xmlns:task="http://www.springframework.org/schema/task"
	 xmlns:context="http://www.springframework.org/schema/context"
	 xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
	    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<import resource="../config/spring/context-batch.xml" />
	<import resource="../config/spring/context-datasource.xml" />
	
	<bean id="report" class="myspring.batch.model.Report" scope="prototype" />
	<bean id="itemProcessor" class="myspring.batch.processor.ReportItemProcessor" />
	
	<bean id="customMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	   <property name="classesToBeBound">
		<list>
			<value>myspring.batch.model.Report</value>
		</list>
	    </property>
	</bean>
	
	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:src/main/resources/files/output/report.xml" />
		<property name="encoding" value="UTF-8" />
		<property name="marshaller" ref="customMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>
	
	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:files/input/report.csv" />
		<property name="lineMapper">
		    <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
			<property name="lineTokenizer">
				<bean
					class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
					<property name="names" value="id,sales,qty,staffName,date" />
				</bean>
			</property>
			<property name="fieldSetMapper">
				<bean class="myspring.batch.model.ReportFieldSetMapper" />
				 <!-- if no data type conversion, use BeanWrapperFieldSetMapper to map by name
				<bean
					class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
					<property name="prototypeBeanName" value="report" />
				</bean>
				 -->
			</property>
		    </bean>
		</property>
	</bean>
	
	<batch:job id="csvFileToXmlFileJob">
	  <batch:step id="step1">
		<batch:tasklet>
			<batch:chunk reader="cvsFileItemReader" writer="xmlItemWriter" processor="itemProcessor" commit-interval="10">
			</batch:chunk>
		</batch:tasklet>
	  </batch:step>
	</batch:job>
		
	<!-- Custom Job Launcher Class -->
	<bean id="jobRuntime" class="myspring.batch.launcher.JobRuntime">
		<property name="jobLauncher" ref="jobLauncher"/>
		<property name="job" ref="csvFileToXmlFileJob"/>
	</bean>
</beans>